CanvasController=function(a){function b(){f=a(window),g=a("CANVAS"),h=g.get(0),i=h.getContext("2d"),f.on("resize",c).trigger("resize")}function c(){var b=f.width(),c=f.height();g.attr("width",b),g.attr("height",c),a(e).trigger("resize")}function d(){h.width=h.width}var e,f,g,h,i;return e={get ctx(){return i}},e.clear=d,a(b),e}(jQuery),Circle=function(){function a(a,b){this.center=new Vector(a),this.radius=b}function b(a){var b=!1,c=a.center.subtract(this.center),d=c.length,e=this.radius+a.radius;return e>d&&(c.length=e-d,b=c),b}function c(){return"c: "+this.center.toString()+", r: "+this.radius}return a.prototype={get diameter(){return 2*this.radius},get circumference(){return Math.PI*this.radius*2},collisionWithCircle:b,toString:c},a}(),DrawController=function(a){function b(){return new Vector(g.canvas.width/2,g.canvas.height/2)}function c(a,c){var d=b();g.fillStyle=c,g.beginPath(),g.arc(d.x+a.center.x,d.y+a.center.y,a.radius,0,2*Math.PI),g.closePath(),g.fill()}function d(a,c){var d=b();g.fillStyle=c,g.beginPath(),g.moveTo(d.x+a.vertices[0].x,d.y+a.vertices[0].y);for(var e=1;e<=a.vertices.length;e++){var f=a.vertices[e%a.vertices.length];g.lineTo(d.x+f.x,d.y+f.y)}g.closePath(),g.fill()}function e(a){var c,d,e,f,h=a.clone();d=b(),c=d.length,h.length=c,e=h.clone(),f=h.clone().multiplyByScalar(-1),g.strokeStyle="#ccc",g.beginPath(),g.moveTo(d.x,d.y),g.lineTo(d.x+e.x,d.y+e.y),g.moveTo(d.x,d.y),g.lineTo(d.x+f.x,d.y+f.y),g.stroke(),g.closePath()}function f(){g=CanvasController.ctx}var g;return DrawController={},DrawController.drawAxis=e,DrawController.drawCircle=c,DrawController.drawPolygon=d,a(f),DrawController}(jQuery),MainController=function(a){function b(){CanvasController.clear();var b,c=[];a(".polygon-input").each(function(){c.push(PolygonInputController.getPolygon(this))});var d=c[0].collisionAxesWithPolygon(c[1]);for(var e in d)b=d[e],DrawController.drawAxis(b);for(e in c){var f=c[e],g=a(".polygon-input").get(e),h=PolygonInputController.getPolygonColor(g),i=PolygonInputController.getProjectionColor(g);DrawController.drawPolygon(f,h);for(var j in d){b=d[j];var k=f.projectedOntoAxis(b);DrawController.drawCircle(k,i)}}}function c(){b(),a(CanvasController).on("resize",b),a(PolygonInputController).on("change",b)}a(c)}(jQuery),PolygonInputController=function(a){function b(b){var c=a(b.currentTarget),d=c.closest(".vertex");return d.remove(),!1}function c(b){var c=a(b.currentTarget),d=c.closest(".vertices"),e=a(m);d.append(e)}function d(){a(PolygonInputController).trigger("change")}function e(b){var c,d,e=a(b),f=[];return a(".vertex",e).each(function(){c=parseFloat(a("[name=x]",this).val()),d=parseFloat(a("[name=y]",this).val()),f.push(new Vector(c,d))}),new Polygon(f)}function f(b){var c,d,e,f=a(b),g=["r","g","b"],h={};for(c in g)d=g[c],e=parseInt(a("[name="+d+"]",f).val(),10),h[d]=e;return h}function g(a){var b=f(a);return"rgba("+b.r+", "+b.g+", "+b.b+", "+k+")"}function h(a){var b=f(a);return"rgba("+b.r+", "+b.g+", "+b.b+", "+l+")"}function i(){a(document).on("click",".remove-vertex",b),a(document).on("click",".add-vertex",c),a(document).on("change, keyup",".polygon-input INPUT",d)}var j={},k=.5,l=.33,m='<div class="vertex"><input name="x" placeholder="X"><input name="y" placeholder="Y"><button class="remove-vertex">Remove</button></div>';return j.getPolygon=e,j.getPolygonColor=g,j.getProjectionColor=h,a(i),j}(jQuery),Polygon=function(){function a(a){var b;this.vertices=[];for(b in a)this.vertices.push(new Vector(a[b]))}function b(){var a,b,c,d,e,f,g=[];for(d=this.sides,a=0;a<d.length;a++){for(f=d[a].rightNormal().normalize(),e=!0,b=0;b<g.length;b++)if(c=g[b],c.isParallelTo(f)){e=!1;break}e&&g.push(f)}return g}function c(a){var b,c,d,e,f=[],g=this.collisionTestAxes(),h=a.collisionTestAxes();for(b=0;b<g.length;b++)f.push(g[b]);for(c=0;c<h.length;c++){for(e=h[c],include=!0,b=0;b<g.length;b++)if(d=g[b],d.isParallelTo(e)){include=!1;break}include&&f.push(e)}return f}function d(a){var b,c,d,e,f,g=this.vertices.length,h=null,i=null;for(c=this.vertices[0].projectedOnto(a),h=i=c.dotProduct(a),e=f=c,b=1;g>b;b++)c=this.vertices[b].projectedOnto(a),d=c.dotProduct(a),h>=d&&(h=d,e=c),d>=i&&(i=d,f=c);return new Circle(Vector.midpoint([e,f]),(i-h)/2)}return a.prototype={get center(){return Vector.midpoint(this.vertices)},get sides(){var a,b,c,d,e=[];for(a=0;a<this.vertices.length;a++)b=this.vertices[a],c=this.vertices[(a+1)%this.vertices.length],d=c.clone().subtract(b),e.push(d);return e},projectedOntoAxis:d,collisionTestAxes:b,collisionAxesWithPolygon:c},a}(),Vector=function(){function a(b,c){b instanceof a?(this.x=b.x,this.y=b.y):"[object Array]"===Object.prototype.toString.call(b)?(this.x=b[0],this.y=b[1]):(this.x=b,this.y=c)}function b(){var a;return this.isZero()||(a=this.length,this.x/=a,this.y/=a),this}function c(a){return this.x+=a.x,this.y+=a.y,this}function d(a){return this.x-=a.x,this.y-=a.y,this}function e(a){return this.x*=a,this.y*=a,this}function f(){return new a(this.y,-1*this.x)}function g(){return new a(-1*this.y,this.x)}function h(a){return this.x*a.x+this.y*a.y}function i(a){return this.x*a.y-this.y*a.x}function j(a){return 0===this.crossProduct(a)}function k(a){return 0===this.dotProduct(a)}function l(){return 0===this.x&&0===this.y}function m(){return new a(this.x,this.y)}function n(a){var b=a.clone().normalize(),c=this.dotProduct(a);return b.multiplyByScalar(c)}function o(){return[this.x,this.y]}function p(){return this.x+","+this.y}return a.prototype={get length(){return Math.sqrt(this.x*this.x+this.y*this.y)},set length(a){this.normalize().multiplyByScalar(a)},x:0,y:0,isZero:l,normalize:b,add:c,subtract:d,multiplyByScalar:e,leftNormal:f,rightNormal:g,dotProduct:h,crossProduct:i,clone:m,isParallelTo:j,isPerpendicularTo:k,projectedOnto:n,toArray:o,toString:p},a.xAxis=new a(1,0),a.yAxis=new a(0,1),a.midpoint=function(b){var c,d=new a(0,0);for(c in b)d.add(b[c]);return d.multiplyByScalar(1/b.length)},a}();